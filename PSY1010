# heyo
# don't be stupid
# love you

import random

# Question banks in form of [Question]: [Answer]

# History/Research/Ethics Assignment
Ch1 = {
    "Seeing a correlation where one does not really exist:": " illusory correlation",
    "Which approach would most likely view depression as learned?": "psychodynamic",
    "This approach would most likely look at the effect of peer influence on behavior: ": "social-cultural",
    "William James founded an approach to understanding behavior based on the idea that human sensory systems were adaptive and aided in survival. His focus was on how emotions, memories, willpower, etc. affected human behavior. His approach called _______________ was impractical and is now obsolete. ": " functionalism",
    "This approach looks at how certain behaviors may have aided in survival and subsequently been passed on to offspring: ": " evolutionary",
    "Sigmund Freud was known for: ": " psychoanalysis",
    "This percentage of results falls within two standard deviations (+/-2Ïƒ) from the mean in a normal curve: ": " 95%",
    "To be considered statistically significant, the possibility that the results come from chance must typically be less than _______ ": " 5%",
    "Edward Titchener used this technique to try to understand the structures of the mind:": " introspection",
    "Regarding experimentation on animals, The American Psychological Association (APA): ": " expects humane treatment",
    "Compared to case studies, surveys have less: ": " depth",
    "Placing subjects in either the experimental group  or the control group at random is known as: ": " random assignment",
    "One of the main concerns with the use of surveys is that: ": " wording can mislead respondents",
    "An experiment in which neither the subjects nor the experimenter knows who is in the experimental group and who is receiving the placebo is called: ": " double-blind",
    "All of the following are true about ethics in experimentation except: {information about participants is confidential, experimenters must assess potential reisks beforehand, debriefing must take place after the experiment, once they start subjects must finmish the experiment}": " once they start, subjects must finish the experiment",
    "This is the variable that results from an experiment which is measured but not manipulated by the experimenter: ": "dependant",
    "The cognitive approach would most likely view depression as a symptom of: ": " detrimental thinking",
    "This is the most critical statistical piece of information when looking at how much impact an intervention has on the behavior of a subject: ": " effect size",
    "Observing subjects without interacting with them in order to describe behavior: ": " naturalistic observations",
    "Which of the following correlation coefficients shows the strongest potential association? {-.52, .43, .11, 0}": " -.52",
}

Ch5 = {
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": ""
}

# Add chapters here in form String: Dict
allChap = {"Ch1": Ch1}

def menuSelect():
    select = ''
    while select != '0' and select != '1' and select != '2':
        select = input()
        if select != '0' and select != '1' and select != '2':
            print('nope')
    print('cool')
    return select

# returns list with chaps
def selectChapters():
    print("what chapter (in form 'Ch#')")
    go = True
    chaps = []
    while go:
        select = ""
        while select not in allChap.keys():
            select = input().lower().capitalize()
            if select not in allChap:
                print('nope')
        chaps.append(select)
        print('cool')
        print("uno mas? (y/n)")
        more = ''
        while more != "y" and more != 'n':
            more = input().lower()
            if more != "y" and more != 'n':
                print('nope')
        print("aight")
        if more == 'n':
            go = False

    return chaps

def test(chaps):
    questionBank = {}
    print("Press enter to see answer/next question, q to quit")
    for chap in chaps:
        questionBank.update(allChap[chap])
    while 1:
        q = random.choice(list(questionBank.keys()))
        print(f"\n\n{q}")
        select = ' '
        while select != 'q' and select != '':
            select = input()
        if select == 'q':
            print('adios')
            exit()
        print(f"{questionBank[q]}")
        while select != 'q' and select != '':
            select = input()
        if select == 'q':
            print('adios')
            exit()


def main():
    print("Hello there.\nGeneral Kenobi!")
    print("...")
    print("Okay...")
    print("umm")
    print("select something, i guess")
    print("0 quit\n1 test all\n2 select chapters")
    selection = menuSelect()
    chaps = allChap.keys()
    if selection == "0":
        print('adios')
        exit()
    if selection == "2":
        chaps = selectChapters()
    test(chaps)



if __name__ == "__main__":
	main()
